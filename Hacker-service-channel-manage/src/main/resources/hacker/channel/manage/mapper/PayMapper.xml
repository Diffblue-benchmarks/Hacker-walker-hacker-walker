<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hacker.channel.manage.mapper.PayMapper">
    <resultMap id="BaseResultMap" type="hacker.framework.model.entity.Pay">
        <id column="tradeNo" jdbcType="BIGINT" property="tradeNo"/>
        <result column="userId" jdbcType="INTEGER" property="userId"/>
        <result column="adminId" jdbcType="INTEGER" property="adminId"/>
        <result column="payTime" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="payAmount" jdbcType="DECIMAL" property="payAmount"/>
        <result column="payStatus" jdbcType="INTEGER" property="payStatus"/>
        <result column="payType" jdbcType="INTEGER" property="payType"/>
        <result column="gmtCreate" jdbcType="TIMESTAMP" property="gmtCreate"/>
    </resultMap>
    <!--添加-->
    <insert id="insertSelective" parameterType="hacker.framework.model.entity.Pay">
        insert into tb_pay
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tradeNo != null">
                tradeNo,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="adminId != null">
                adminId,
            </if>
            <if test="payTime != null">
                payTime,
            </if>
            <if test="payAmount != null">
                payAmount,
            </if>
            <if test="payStatus != null">
                payStatus,
            </if>
            <if test="payType != null">
                payType,
            </if>
            <if test="gmtCreate != null">
                gmtCreate,
            </if>
            <if test="merchantOutOrderNo != null">
                merchantOutOrderNo,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tradeNo != null">
                #{tradeNo,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="adminId != null">
                #{adminId,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=INTEGER},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="merchantOutOrderNo != null">
                #{merchantOutOrderNo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--跟住id查询支付状态-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        *
        from tb_pay
        where tradeNo = #{tradeNo,jdbcType=BIGINT}
    </select>

    <!--修改订单状态-->
    <update id="updateOrderStatus" parameterType="hacker.framework.model.entity.Pay">
        update tb_paylog
        <set>
            <if test="userId != null">
                userId = #{userId,jdbcType=INTEGER},
            </if>
            <if test="adminId != null">
                adminId = #{adminId,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                payTime = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payAmount != null">
                payAmount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="payStatus != null">
                payStatus = #{payStatus,jdbcType=INTEGER},
            </if>
            <if test="payType != null">
                payType = #{payType,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                gmtCreate = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where merchantOutOrderNo = #{merchantOutOrderNo,jdbcType=BIGINT}
    </update>
</mapper>